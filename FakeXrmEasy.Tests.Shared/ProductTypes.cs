// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace XrmToolkit.ProxyClasses
{
    [EntityLogicalNameAttribute("cosl_schemetypes")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class ProductTypes : BaseProxyClass
    {
        public new const string LogicalName = "cosl_schemetypes";
        public const int ObjectTypeCode = 10024;
        public const string PrimaryIdAttribute = "cosl_schemetypesid";
        public const string PrimaryNameAttribute = "cosl_name";
        
        static ProductTypes()
        {
            BaseProxyClass.RegisterProxyType(typeof(ProductTypes), "cosl_schemetypes");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public ProductTypes() : base(new Entity("cosl_schemetypes")) { }
        public ProductTypes(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<ProductTypes>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string Modifiedonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string Modifiedbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string Createdonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: hsfs_ssoconfigname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_ssoconfigname")]
public string Hsfs_SSOConfigName
{
	get { return this.GetPropertyValue<string>("hsfs_ssoconfigname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: cosl_portalpricelistidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portalpricelistidname")]
public string Cosl_portalpricelistidName
{
	get { return this.GetPropertyValue<string>("cosl_portalpricelistidname"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string Createdbyyominame
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: cosl_portalpriceunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portalpriceunitidname")]
public string Cosl_portalpriceunitidName
{
	get { return this.GetPropertyValue<string>("cosl_portalpriceunitidname"); }
}
///<summary>
///<para>Logical Name: hsfs_portaldocumentname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_portaldocumentname")]
public string Hsfs_portaldocumentName
{
	get { return this.GetPropertyValue<string>("hsfs_portaldocumentname"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: hsfs_defaultconfiguration</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_defaultconfiguration")]
public bool? DefaultConfiguration
{
	get { return this.GetPropertyValue<bool?>("hsfs_defaultconfiguration"); }
	set { this.SetPropertyValue<bool?>("hsfs_defaultconfiguration", value, "DefaultConfiguration"); }
}
///<summary>
///<para>Logical Name: hsfs_endlevel</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 999</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_endlevel")]
public int? EndLevel
{
	get { return this.GetPropertyValue<int?>("hsfs_endlevel"); }
	set { this.SetPropertyValue("hsfs_endlevel", (int?)value, (int)0, (int)999, "EndLevel"); }
}
///<summary>
///<para>Logical Name: hsfs_example</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_example")]
public string Example
{
	get { return this.GetPropertyValue<string>("hsfs_example"); }
	set { this.SetPropertyValue("hsfs_example", value, 2000, "Example"); }
}
///<summary>
///<para>Logical Name: hsfs_forfamilytitle</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_forfamilytitle")]
public string ForFamilyTitle
{
	get { return this.GetPropertyValue<string>("hsfs_forfamilytitle"); }
	set { this.SetPropertyValue("hsfs_forfamilytitle", value, 100, "ForFamilyTitle"); }
}
///<summary>
///<para>Logical Name: hsfs_foryouandfamilytitle</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_foryouandfamilytitle")]
public string ForYouAndFamilyTitle
{
	get { return this.GetPropertyValue<string>("hsfs_foryouandfamilytitle"); }
	set { this.SetPropertyValue("hsfs_foryouandfamilytitle", value, 100, "ForYouAndFamilyTitle"); }
}
///<summary>
///<para>Logical Name: hsfs_foryoutitle</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_foryoutitle")]
public string ForYouTitle
{
	get { return this.GetPropertyValue<string>("hsfs_foryoutitle"); }
	set { this.SetPropertyValue("hsfs_foryoutitle", value, 100, "ForYouTitle"); }
}
///<summary>
///<para>Logical Name: cosl_ibrequired</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_ibrequired")]
public bool? IBRequired
{
	get { return this.GetPropertyValue<bool?>("cosl_ibrequired"); }
	set { this.SetPropertyValue<bool?>("cosl_ibrequired", value, "IBRequired"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: hsfs_includefamily</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_includefamily")]
public bool? IncludeFamily
{
	get { return this.GetPropertyValue<bool?>("hsfs_includefamily"); }
	set { this.SetPropertyValue<bool?>("hsfs_includefamily", value, "IncludeFamily"); }
}
///<summary>
///<para>Logical Name: hsfs_includeindividual</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_includeindividual")]
public bool? IncludeIndividual
{
	get { return this.GetPropertyValue<bool?>("hsfs_includeindividual"); }
	set { this.SetPropertyValue<bool?>("hsfs_includeindividual", value, "IncludeIndividual"); }
}
///<summary>
///<para>Logical Name: hsfs_increment</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_increment")]
public int? Increment
{
	get { return this.GetPropertyValue<int?>("hsfs_increment"); }
	set { this.SetPropertyValue("hsfs_increment", (int?)value, (int)0, (int)2147483647, "Increment"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: cosl_name</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_name")]
public string Name
{
	get { return this.GetPropertyValue<string>("cosl_name"); }
	set { this.SetPropertyValue("cosl_name", value, 50, "Name"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
/// <summary>
///Logical Name: hsfs_owningcompany
/// </summary>
[AttributeLogicalNameAttribute("hsfs_owningcompany")]
public eOwningCompany? OwningCompany
{
	get
	{
		if (OwningCompany_OptionSetValue != null) { return (eOwningCompany)OwningCompany_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.OwningCompany_OptionSetValue = new OptionSetValue((int)value); }
		else this.OwningCompany_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: hsfs_owningcompany</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_owningcompany")]
public OptionSetValue OwningCompany_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("hsfs_owningcompany"); }
	set { this.SetPropertyValue<OptionSetValue>("hsfs_owningcompany", value, "OwningCompany_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string OwningCompany_Text(IOrganizationService Service)
{
	return this.OwningCompany_OptionSetValue.GetOptionSetText(Service, this, "hsfs_owningcompany");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string OwningCompany_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.OwningCompany_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: cosl_portaldescription</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portaldescription")]
public string PortalDescription
{
	get { return this.GetPropertyValue<string>("cosl_portaldescription"); }
	set { this.SetPropertyValue("cosl_portaldescription", value, 1000, "PortalDescription"); }
}
///<summary>
///<para>Logical Name: hsfs_portaldocument</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_portaldocument")]
public EntityReference PortalDocument
{
	get { return this.GetPropertyValue<EntityReference>("hsfs_portaldocument"); }
	set { this.SetPropertyValue<EntityReference>("hsfs_portaldocument", value, "PortalDocument"); }
}
///<summary>
///<para>Logical Name: cosl_portalenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portalenabled")]
public bool? PortalEnabled
{
	get { return this.GetPropertyValue<bool?>("cosl_portalenabled"); }
	set { this.SetPropertyValue<bool?>("cosl_portalenabled", value, "PortalEnabled"); }
}
///<summary>
///<para>Logical Name: hsfs_portalhovertext</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_portalhovertext")]
public string PortalHoverText
{
	get { return this.GetPropertyValue<string>("hsfs_portalhovertext"); }
	set { this.SetPropertyValue("hsfs_portalhovertext", value, 200, "PortalHoverText"); }
}
///<summary>
///<para>Logical Name: hsfs_portalicon</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_portalicon")]
public string PortalIcon
{
	get { return this.GetPropertyValue<string>("hsfs_portalicon"); }
	set { this.SetPropertyValue("hsfs_portalicon", value, 100, "PortalIcon"); }
}
///<summary>
///<para>Logical Name: cosl_portalname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portalname")]
public string PortalName
{
	get { return this.GetPropertyValue<string>("cosl_portalname"); }
	set { this.SetPropertyValue("cosl_portalname", value, 100, "PortalName"); }
}
///<summary>
///<para>Logical Name: cosl_portalpricelistid</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portalpricelistid")]
public EntityReference PortalPriceList
{
	get { return this.GetPropertyValue<EntityReference>("cosl_portalpricelistid"); }
	set { this.SetPropertyValue<EntityReference>("cosl_portalpricelistid", value, "PortalPriceList"); }
}
///<summary>
///<para>Logical Name: cosl_portalpriceunitid</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portalpriceunitid")]
public EntityReference PortalPriceUnit
{
	get { return this.GetPropertyValue<EntityReference>("cosl_portalpriceunitid"); }
	set { this.SetPropertyValue<EntityReference>("cosl_portalpriceunitid", value, "PortalPriceUnit"); }
}
///<summary>
///<para>Logical Name: hsfs_portalsummary</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_portalsummary")]
public string PortalSummary
{
	get { return this.GetPropertyValue<string>("hsfs_portalsummary"); }
	set { this.SetPropertyValue("hsfs_portalsummary", value, 200, "PortalSummary"); }
}
///<summary>
///<para>Logical Name: cosl_portaltailored</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_portaltailored")]
public bool? PortalTailored
{
	get { return this.GetPropertyValue<bool?>("cosl_portaltailored"); }
	set { this.SetPropertyValue<bool?>("cosl_portaltailored", value, "PortalTailored"); }
}
/// <summary>
///Logical Name: hsfs_productcategory
/// </summary>
[AttributeLogicalNameAttribute("hsfs_productcategory")]
public eProductCategory? ProductCategory
{
	get
	{
		if (ProductCategory_OptionSetValue != null) { return (eProductCategory)ProductCategory_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProductCategory_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProductCategory_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: hsfs_productcategory</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_productcategory")]
public OptionSetValue ProductCategory_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("hsfs_productcategory"); }
	set { this.SetPropertyValue<OptionSetValue>("hsfs_productcategory", value, "ProductCategory_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProductCategory_Text(IOrganizationService Service)
{
	return this.ProductCategory_OptionSetValue.GetOptionSetText(Service, this, "hsfs_productcategory");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProductCategory_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProductCategory_OptionSetValue.Value);
}
/// <summary>
///Logical Name: hsfs_productfamily
/// </summary>
[AttributeLogicalNameAttribute("hsfs_productfamily")]
public eProductFamily? ProductFamily
{
	get
	{
		if (ProductFamily_OptionSetValue != null) { return (eProductFamily)ProductFamily_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProductFamily_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProductFamily_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: hsfs_productfamily</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_productfamily")]
public OptionSetValue ProductFamily_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("hsfs_productfamily"); }
	set { this.SetPropertyValue<OptionSetValue>("hsfs_productfamily", value, "ProductFamily_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProductFamily_Text(IOrganizationService Service)
{
	return this.ProductFamily_OptionSetValue.GetOptionSetText(Service, this, "hsfs_productfamily");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProductFamily_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProductFamily_OptionSetValue.Value);
}
/// <summary>
///Logical Name: cosl_type
/// </summary>
[AttributeLogicalNameAttribute("cosl_type")]
public eType? ProductGroup
{
	get
	{
		if (ProductGroup_OptionSetValue != null) { return (eType)ProductGroup_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ProductGroup_OptionSetValue = new OptionSetValue((int)value); }
		else this.ProductGroup_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: cosl_type</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_type")]
public OptionSetValue ProductGroup_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("cosl_type"); }
	set { this.SetPropertyValue<OptionSetValue>("cosl_type", value, "ProductGroup_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ProductGroup_Text(IOrganizationService Service)
{
	return this.ProductGroup_OptionSetValue.GetOptionSetText(Service, this, "cosl_type");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ProductGroup_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ProductGroup_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: cosl_renewalremindermonths</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 12</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_renewalremindermonths")]
public int? RenewalReminderMonths
{
	get { return this.GetPropertyValue<int?>("cosl_renewalremindermonths"); }
	set { this.SetPropertyValue("cosl_renewalremindermonths", (int?)value, (int)0, (int)12, "RenewalReminderMonths"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: cosl_schemetypesid</para>
///</summary>
[AttributeLogicalNameAttribute("cosl_schemetypesid")]
public Guid SchemeTypesId
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: hsfs_ssoconfig</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_ssoconfig")]
public EntityReference SSOConfig
{
	get { return this.GetPropertyValue<EntityReference>("hsfs_ssoconfig"); }
	set { this.SetPropertyValue<EntityReference>("hsfs_ssoconfig", value, "SSOConfig"); }
}
///<summary>
///<para>Logical Name: hsfs_ssoenabledbydefault</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_ssoenabledbydefault")]
public bool? SSOEnabledByDefault
{
	get { return this.GetPropertyValue<bool?>("hsfs_ssoenabledbydefault"); }
	set { this.SetPropertyValue<bool?>("hsfs_ssoenabledbydefault", value, "SSOEnabledByDefault"); }
}
///<summary>
///<para>Logical Name: hsfs_startlevel</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///</summary>
[AttributeLogicalNameAttribute("hsfs_startlevel")]
public int? StartLevel
{
	get { return this.GetPropertyValue<int?>("hsfs_startlevel"); }
	set { this.SetPropertyValue("hsfs_startlevel", (int?)value, (int)0, (int)100, "StartLevel"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_ActivityPointers</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_ActivityPointers</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Annotations</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Annotations</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Appointments</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Appointments</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_cdi_txtmessages</para>
/// </summary>
public List<Entity> GetTextMessages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "cdi_txtmessage", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_cdi_txtmessages</para>
/// </summary>
public List<Entity> GetTextMessages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "cdi_txtmessage", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_cosl_meetingnotes</para>
/// </summary>
public List<Entity> GetMeetingNotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "cosl_meetingnotes", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_cosl_meetingnotes</para>
/// </summary>
public List<Entity> GetMeetingNotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "cosl_meetingnotes", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_cosl_memberimports</para>
/// </summary>
public List<Entity> GetMemberImports (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "cosl_memberimports", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_cosl_memberimports</para>
/// </summary>
public List<Entity> GetMemberImports (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "cosl_memberimports", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Faxes</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Faxes</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity (Product Type)</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_lead</para>
/// </summary>
public List<Entity> GetLeads_ProductType (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity (Product Type)</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_lead</para>
/// </summary>
public List<Entity> GetLeads_ProductType (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Letters</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Letters</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity (Product Type)</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_opportunity</para>
/// </summary>
public List<Entity> GetOpportunities_ProductType (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity (Product Type)</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_opportunity</para>
/// </summary>
public List<Entity> GetOpportunities_ProductType (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_PhoneCalls</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_PhoneCalls</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_ProcessSession</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_ProcessSession</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_product</para>
/// </summary>
public List<Entity> GetProductLevels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "product", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_cosl_schemetypes_product</para>
/// </summary>
public List<Entity> GetProductLevels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "product", "cosl_schemetypeid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_ServiceAppointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_ServiceAppointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_SocialActivities</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_SocialActivities</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Tasks</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_Tasks</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_UserEntityInstanceDatas</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: cosl_schemetypes_UserEntityInstanceDatas</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Product Types</b></para>
/// <para>Bolt On Product</para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: hsfs_cosl_schemetypes_cosl_schemetypes</para>
/// </summary>
public List<ProductTypes> GetCoreProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<ProductTypes>(Service, this, "cosl_schemetypes", "cosl_schemetypesid", "cosl_schemetypes", "cosl_schemetypesid", "hsfs_cosl_schemetypes_cosl_schemetypes", "cosl_schemetypesidone", "cosl_schemetypesidtwo", Columns); }
public List<ProductTypes> GetCoreProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<ProductTypes>(Service, this, "cosl_schemetypes", "cosl_schemetypesid", "cosl_schemetypes", "cosl_schemetypesid", "hsfs_cosl_schemetypes_cosl_schemetypes", "cosl_schemetypesidone", "cosl_schemetypesidtwo", Columns); }
public void RelateCoreProduct (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "hsfs_cosl_schemetypes_cosl_schemetypes", Items); }
public void RelateCoreProduct (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "hsfs_cosl_schemetypes_cosl_schemetypes", Items); }
public void UnRelateCoreProduct (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "hsfs_cosl_schemetypes_cosl_schemetypes", Items); }
public void UnRelateCoreProduct (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "hsfs_cosl_schemetypes_cosl_schemetypes", Items); }


        

        public enum eOwningCompany
{
	///<summary><para>HS</para>
	///<para>Value = 0</para></summary>
	[Description("HS")]
	HS = 0, 
	///<summary><para>HSWB</para>
	///<para>Value = 1</para></summary>
	[Description("HSWB")]
	HSWB = 1
}
public enum eProductCategory
{
	///<summary><para>Core Product</para>
	///<para>Value = 1</para></summary>
	[Description("Core Product")]
	CoreProduct = 1, 
	///<summary><para>Bolt on Product</para>
	///<para>Value = 2</para></summary>
	[Description("Bolt on Product")]
	BoltOnProduct = 2
}
public enum eProductFamily
{
	///<summary><para>Cash Plan</para>
	///<para>Value = 100000000</para></summary>
	[Description("Cash Plan")]
	CashPlan = 100000000, 
	///<summary><para>Life Cover</para>
	///<para>Value = 100000001</para></summary>
	[Description("Life Cover")]
	LifeCover = 100000001, 
	///<summary><para>Pet Insurance</para>
	///<para>Value = 100000002</para></summary>
	[Description("Pet Insurance")]
	PetInsurance = 100000002
}
public enum eType
{
	///<summary><para>Company Paid Corporate</para>
	///<para>Value = 2</para></summary>
	[Description("Company Paid Corporate")]
	CompanyPaidCorporate = 2, 
	///<summary><para>Elements</para>
	///<para>Value = 7</para></summary>
	[Description("Elements")]
	Elements = 7, 
	///<summary><para>Elements Plus</para>
	///<para>Value = 8</para></summary>
	[Description("Elements Plus")]
	ElementsPlus = 8, 
	///<summary><para>Essentials</para>
	///<para>Value = 3</para></summary>
	[Description("Essentials")]
	Essentials = 3, 
	///<summary><para>Essentials Plus</para>
	///<para>Value = 6</para></summary>
	[Description("Essentials Plus")]
	EssentialsPlus = 6, 
	///<summary><para>EAP</para>
	///<para>Value = 100000000</para></summary>
	[Description("EAP")]
	EAP = 100000000, 
	///<summary><para>Flexible Benefit</para>
	///<para>Value = 4</para></summary>
	[Description("Flexible Benefit")]
	FlexibleBenefit = 4, 
	///<summary><para>Tailored Scheme</para>
	///<para>Value = 5</para></summary>
	[Description("Tailored Scheme")]
	TailoredScheme = 5, 
	///<summary><para>Voluntary Corporate</para>
	///<para>Value = 1</para></summary>
	[Description("Voluntary Corporate")]
	VoluntaryCorporate = 1, 
	///<summary><para>Connect</para>
	///<para>Value = 11</para></summary>
	[Description("Connect")]
	Connect = 11, 
	///<summary><para>Premier</para>
	///<para>Value = 12</para></summary>
	[Description("Premier")]
	Premier = 12, 
	///<summary><para>Premier Plus</para>
	///<para>Value = 13</para></summary>
	[Description("Premier Plus")]
	PremierPlus = 13, 
	///<summary><para>Agency Scheme</para>
	///<para>Value = 14</para></summary>
	[Description("Agency Scheme")]
	AgencyScheme = 14, 
	///<summary><para>Agency Scheme Plus</para>
	///<para>Value = 15</para></summary>
	[Description("Agency Scheme Plus")]
	AgencySchemePlus = 15, 
	///<summary><para>Closed Scheme</para>
	///<para>Value = 16</para></summary>
	[Description("Closed Scheme")]
	ClosedScheme = 16
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string Modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string Modifiedbyyominame = "modifiedbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string Createdonbehalfbyyominame = "createdonbehalfbyyominame";
	/// <summary><para>timezoneruleversionnumber</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>hsfs_ssoconfigname</para>
	/// <para>hsfs_ssoconfigname</para></summary>
	public const string Hsfs_SSOConfigName = "hsfs_ssoconfigname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>cosl_portalpricelistidname</para>
	/// <para>cosl_portalpricelistidname</para></summary>
	public const string Cosl_portalpricelistidName = "cosl_portalpricelistidname";
	/// <summary><para>utcconversiontimezonecode</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string Createdbyyominame = "createdbyyominame";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>cosl_portalpriceunitidname</para>
	/// <para>cosl_portalpriceunitidname</para></summary>
	public const string Cosl_portalpriceunitidName = "cosl_portalpriceunitidname";
	/// <summary><para>hsfs_portaldocumentname</para>
	/// <para>hsfs_portaldocumentname</para></summary>
	public const string Hsfs_portaldocumentName = "hsfs_portaldocumentname";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Default Configuration</para>
	/// <para>hsfs_defaultconfiguration</para></summary>
	public const string DefaultConfiguration = "hsfs_defaultconfiguration";
	/// <summary><para>End Level</para>
	/// <para>hsfs_endlevel</para></summary>
	public const string EndLevel = "hsfs_endlevel";
	/// <summary><para>Example</para>
	/// <para>hsfs_example</para></summary>
	public const string Example = "hsfs_example";
	/// <summary><para>For Family Title</para>
	/// <para>hsfs_forfamilytitle</para></summary>
	public const string ForFamilyTitle = "hsfs_forfamilytitle";
	/// <summary><para>For You And Family Title</para>
	/// <para>hsfs_foryouandfamilytitle</para></summary>
	public const string ForYouAndFamilyTitle = "hsfs_foryouandfamilytitle";
	/// <summary><para>For You Title</para>
	/// <para>hsfs_foryoutitle</para></summary>
	public const string ForYouTitle = "hsfs_foryoutitle";
	/// <summary><para>IB Required</para>
	/// <para>cosl_ibrequired</para></summary>
	public const string IBRequired = "cosl_ibrequired";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Include Family</para>
	/// <para>hsfs_includefamily</para></summary>
	public const string IncludeFamily = "hsfs_includefamily";
	/// <summary><para>Include Individual</para>
	/// <para>hsfs_includeindividual</para></summary>
	public const string IncludeIndividual = "hsfs_includeindividual";
	/// <summary><para>Increment</para>
	/// <para>hsfs_increment</para></summary>
	public const string Increment = "hsfs_increment";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>cosl_name</para></summary>
	public const string Name = "cosl_name";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Company</para>
	/// <para>hsfs_owningcompany</para></summary>
	public const string OwningCompany = "hsfs_owningcompany";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Portal Description</para>
	/// <para>cosl_portaldescription</para></summary>
	public const string PortalDescription = "cosl_portaldescription";
	/// <summary><para>Portal Document</para>
	/// <para>hsfs_portaldocument</para></summary>
	public const string PortalDocument = "hsfs_portaldocument";
	/// <summary><para>Portal Enabled</para>
	/// <para>cosl_portalenabled</para></summary>
	public const string PortalEnabled = "cosl_portalenabled";
	/// <summary><para>Portal Hover Text</para>
	/// <para>hsfs_portalhovertext</para></summary>
	public const string PortalHoverText = "hsfs_portalhovertext";
	/// <summary><para>Portal Icon</para>
	/// <para>hsfs_portalicon</para></summary>
	public const string PortalIcon = "hsfs_portalicon";
	/// <summary><para>Portal Name</para>
	/// <para>cosl_portalname</para></summary>
	public const string PortalName = "cosl_portalname";
	/// <summary><para>Portal Price List</para>
	/// <para>cosl_portalpricelistid</para></summary>
	public const string PortalPriceList = "cosl_portalpricelistid";
	/// <summary><para>Portal Price Unit</para>
	/// <para>cosl_portalpriceunitid</para></summary>
	public const string PortalPriceUnit = "cosl_portalpriceunitid";
	/// <summary><para>Portal Summary</para>
	/// <para>hsfs_portalsummary</para></summary>
	public const string PortalSummary = "hsfs_portalsummary";
	/// <summary><para>Portal Tailored</para>
	/// <para>cosl_portaltailored</para></summary>
	public const string PortalTailored = "cosl_portaltailored";
	/// <summary><para>Product Category</para>
	/// <para>hsfs_productcategory</para></summary>
	public const string ProductCategory = "hsfs_productcategory";
	/// <summary><para>Product Family</para>
	/// <para>hsfs_productfamily</para></summary>
	public const string ProductFamily = "hsfs_productfamily";
	/// <summary><para>Product Group</para>
	/// <para>cosl_type</para></summary>
	public const string ProductGroup = "cosl_type";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Renewal Reminder Months</para>
	/// <para>cosl_renewalremindermonths</para></summary>
	public const string RenewalReminderMonths = "cosl_renewalremindermonths";
	/// <summary><para>Scheme Types</para>
	/// <para>cosl_schemetypesid</para></summary>
	public const string SchemeTypesId = "cosl_schemetypesid";
	/// <summary><para>SSO Config</para>
	/// <para>hsfs_ssoconfig</para></summary>
	public const string SSOConfig = "hsfs_ssoconfig";
	/// <summary><para>SSO Enabled By Default</para>
	/// <para>hsfs_ssoenabledbydefault</para></summary>
	public const string SSOEnabledByDefault = "hsfs_ssoenabledbydefault";
	/// <summary><para>Start Level</para>
	/// <para>hsfs_startlevel</para></summary>
	public const string StartLevel = "hsfs_startlevel";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
}

    }
}
